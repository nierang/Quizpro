{"ast":null,"code":"var _jsxFileName = \"/Users/panz/Desktop/Quizpro/dashboard-fullstack/frontend/src/components/Layout/Layout.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\"; // Import useLocation\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport LanguageToggle from \"../LanguageToggle/LanguageToggle\";\nimport styles from \"./Layout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = ({\n  children\n}) => {\n  _s();\n  const location = useLocation(); // Get the current route\n\n  // Define routes where the Sidebar should not be displayed\n  const noSidebarRoutes = [\"/login\"];\n  const isSidebarHidden = noSidebarRoutes.includes(location.pathname);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.layout} ${isSidebarHidden ? styles.sidebarHidden : \"\"}`,\n    children: [!isSidebarHidden && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(LanguageToggle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useLocation","Sidebar","LanguageToggle","styles","jsxDEV","_jsxDEV","Layout","children","_s","location","noSidebarRoutes","isSidebarHidden","includes","pathname","className","layout","sidebarHidden","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["/Users/panz/Desktop/Quizpro/dashboard-fullstack/frontend/src/components/Layout/Layout.tsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\"; // Import useLocation\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport LanguageToggle from \"../LanguageToggle/LanguageToggle\";\nimport styles from \"./Layout.module.css\";\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  const location = useLocation(); // Get the current route\n\n  // Define routes where the Sidebar should not be displayed\n  const noSidebarRoutes = [\"/login\"];\n\n  const isSidebarHidden = noSidebarRoutes.includes(location.pathname);\n\n  return (\n    <div className={`${styles.layout} ${isSidebarHidden ? styles.sidebarHidden : \"\"}`}>\n      {/* Conditionally render Sidebar */}\n      {!isSidebarHidden && <Sidebar />}\n      <div className={styles.content}>\n        <LanguageToggle />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMU,eAAe,GAAG,CAAC,QAAQ,CAAC;EAElC,MAAMC,eAAe,GAAGD,eAAe,CAACE,QAAQ,CAACH,QAAQ,CAACI,QAAQ,CAAC;EAEnE,oBACER,OAAA;IAAKS,SAAS,EAAE,GAAGX,MAAM,CAACY,MAAM,IAAIJ,eAAe,GAAGR,MAAM,CAACa,aAAa,GAAG,EAAE,EAAG;IAAAT,QAAA,GAE/E,CAACI,eAAe,iBAAIN,OAAA,CAACJ,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCf,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACkB,OAAQ;MAAAd,QAAA,gBAC7BF,OAAA,CAACH,cAAc;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjBb,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAlBIF,MAAM;EAAA,QACON,WAAW;AAAA;AAAAsB,EAAA,GADxBhB,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}