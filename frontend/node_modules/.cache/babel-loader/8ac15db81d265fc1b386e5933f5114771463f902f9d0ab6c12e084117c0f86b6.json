{"ast":null,"code":"var _jsxFileName = \"/Users/panz/Desktop/Quizpro/dashboard-fullstack/frontend/src/components/LanguageToggle/LanguageToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./LanguageToggle.module.css\";\nimport { iconMap } from \"../../utils/iconMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageToggle = () => {\n  _s();\n  const [language, setLanguage] = useState(\"en\"); // Default to English\n\n  const toggleLanguage = () => {\n    setLanguage(prevLanguage => prevLanguage === \"en\" ? \"sv\" : \"en\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.languageToggle,\n    onClick: toggleLanguage,\n    children: [/*#__PURE__*/_jsxDEV(iconMap.language, {\n      className: styles.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: language === \"en\" ? \"English\" : \"Swedish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageToggle, \"JgNS4s3wc06/6u6z+Ak7Ai5ELN8=\");\n_c = LanguageToggle;\nexport default LanguageToggle;\nvar _c;\n$RefreshReg$(_c, \"LanguageToggle\");","map":{"version":3,"names":["React","useState","styles","iconMap","jsxDEV","_jsxDEV","LanguageToggle","_s","language","setLanguage","toggleLanguage","prevLanguage","className","languageToggle","onClick","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/panz/Desktop/Quizpro/dashboard-fullstack/frontend/src/components/LanguageToggle/LanguageToggle.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./LanguageToggle.module.css\";\nimport { iconMap } from \"../../utils/iconMap\";\n\nconst LanguageToggle = () => {\n  const [language, setLanguage] = useState(\"en\"); // Default to English\n\n  const toggleLanguage = () => {\n    setLanguage((prevLanguage) => (prevLanguage === \"en\" ? \"sv\" : \"en\"));\n  };\n\n  return (\n    <div className={styles.languageToggle} onClick={toggleLanguage}>\n      <iconMap.language className={styles.icon} />\n      <span>{language === \"en\" ? \"English\" : \"Swedish\"}</span>\n    </div>\n  );\n};\n\nexport default LanguageToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAEE,YAAY,IAAMA,YAAY,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EACtE,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAEV,MAAM,CAACW,cAAe;IAACC,OAAO,EAAEJ,cAAe;IAAAK,QAAA,gBAC7DV,OAAA,CAACF,OAAO,CAACK,QAAQ;MAACI,SAAS,EAAEV,MAAM,CAACc;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Cf,OAAA;MAAAU,QAAA,EAAOP,QAAQ,KAAK,IAAI,GAAG,SAAS,GAAG;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACb,EAAA,CAbID,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}